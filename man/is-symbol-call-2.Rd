% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/types_predicates.R
\name{is-symbol-call-2}
\alias{is-symbol-call-2}
\alias{is_symbol2}
\alias{is_call2}
\title{Extensions of \code{\link[rlang:is_symbol]{rlang::is_symbol()}} and \code{\link[rlang:is_call]{rlang::is_call()}}}
\usage{
is_symbol2(x, name = NULL, ns_sym_is_sym = TRUE)

is_call2(x, name = NULL, n = NULL, ns = NULL, ns_sym_is_call = FALSE)
}
\arguments{
\item{x}{An object to test. Formulas and quosures are treated
literally.}

\item{name}{An optional name that the call should match. It is
passed to \code{\link[rlang:sym]{sym()}} before matching. This argument is vectorised
and you can supply a vector of names to match. In this case,
\code{is_call()} returns \code{TRUE} if at least one name matches.}

\item{ns_sym_is_sym}{TRUE or FALSE. If TRUE (default), the function returns TRUE for symbols and a call of the type pkg::fun. FALSE otherwise.}

\item{n}{An optional number of arguments that the call should
match.}

\item{ns}{The namespace of the call. If \code{NULL}, the namespace
doesn't participate in the pattern-matching. If an empty string
\code{""} and \code{x} is a namespaced call, \code{is_call()} returns
\code{FALSE}. If any other string, \code{is_call()} checks that \code{x} is
namespaced within \code{ns}.

Can be a character vector of namespaces, in which case the call
has to match at least one of them, otherwise \code{is_call()} returns
\code{FALSE}.}

\item{ns_sym_is_call}{TRUE or FALSE. If TRUE (default), the function returns TRUE for a calls and a call of the type pkg::fun(). FALSE otherwise.}
}
\value{
TRUE or FALSE.
}
\description{
Extensions of \code{\link[rlang:is_symbol]{rlang::is_symbol()}} and \code{\link[rlang:is_call]{rlang::is_call()}}
}
